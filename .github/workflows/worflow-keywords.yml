# Workflow name
name: 'Testing workflow basics'

on:
  workflow_dispatch:
    # Event inputs parameters
    inputs:
      environment:
        description: Test environment
        required: true
      branch-name:
        description: Branch name  # This is optional

env:
  SERVICE_NAME: dazn-performance-test

jobs:
  first-job:
    runs-on: ubuntu-latest
    name: first job in workflow
    outputs:
      something: ${{ steps.generate-output.outputs.my-name }}  # How to use outputs (for a job)
    steps:
      - name: "Chiru steps"
        id: generate-output  # This is to set uniqueness and an easy way to access a step in jobs
        run: |
          echo "Hello, GitHub Actions! ${{ github.event.inputs.environment }}"       # Accessing an event input parameter
          echo "Hello, GitHub Actions! ${{ github.event.inputs.branch-name }}"
          echo "Hello, GitHub Actions! ${{ env.SERVICE_NAME }}"       # Using an env variable defined at top level (workflow level)
          echo "my-name=karthik"  >>  $GITHUB_OUTPUT
          echo "${{ secrets.SOMETHING }}"
          echo "Setting secrets as environment variables"
          export MY_SECRET="${{ secrets.SOMETHING }}"
          echo "MY_SECRET=$MY_SECRET"
      
      - name: Write secret to file
        env:
           MY_VAL: ${{ secrets.GLOBAL_GITHUB_TOKEN }}
        run: |
          with open("file", "w") as data:
              for q in os.getenv("MY_VAL"):
                  print(q, end="")
                  data.write(q)
        shell: python
        
      - name: "Chiru steps 2"
        id: generate-output2  # This is to set uniqueness and an easy way to access a step in jobs
        run: |
          echo "Hello, GitHub Actions! ${{ steps.generate-output.outputs.my-name }}"       # Accessing output of the previous step in the current step
  second-job:
    runs-on: ubuntu-latest
    name: second job in workflow
    needs:
      [first-job]
    steps:
      - name: "Chiru steps3"
        id: generate-output3  
        run: echo "${{needs.first-job.outputs.something}}"  # accessing output of previous job